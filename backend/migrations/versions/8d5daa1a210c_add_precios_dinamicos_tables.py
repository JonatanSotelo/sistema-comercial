"""add_precios_dinamicos_tables

Revision ID: 8d5daa1a210c
Revises: 32ee9753feba
Create Date: 2025-09-05 20:26:02.471009

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8d5daa1a210c'
down_revision: Union[str, Sequence[str], None] = '32ee9753feba'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_configuracion_inventario_activo', table_name='configuracion_inventario')
    op.drop_index('ix_configuracion_inventario_producto_id', table_name='configuracion_inventario')
    op.drop_table('configuracion_inventario')
    op.drop_index('ix_reorden_automatico_estado', table_name='reorden_automatico')
    op.drop_index('ix_reorden_automatico_producto_id', table_name='reorden_automatico')
    op.drop_index('ix_reorden_automatico_proveedor_id', table_name='reorden_automatico')
    op.drop_table('reorden_automatico')
    op.drop_index('ix_movimientos_inventario_fecha_movimiento', table_name='movimientos_inventario')
    op.drop_index('ix_movimientos_inventario_producto_id', table_name='movimientos_inventario')
    op.drop_index('ix_movimientos_inventario_tipo_movimiento', table_name='movimientos_inventario')
    op.drop_table('movimientos_inventario')
    op.drop_index('ix_alertas_inventario_estado', table_name='alertas_inventario')
    op.drop_index('ix_alertas_inventario_prioridad', table_name='alertas_inventario')
    op.drop_index('ix_alertas_inventario_producto_id', table_name='alertas_inventario')
    op.drop_index('ix_alertas_inventario_tipo', table_name='alertas_inventario')
    op.drop_table('alertas_inventario')
    op.drop_table('auditoria')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auditoria',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('ts', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('actor', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('accion', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('detalle', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='auditoria_pkey')
    )
    op.create_table('alertas_inventario',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('producto_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tipo', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('estado', sa.VARCHAR(length=20), server_default=sa.text("'pendiente'::character varying"), autoincrement=False, nullable=True),
    sa.Column('titulo', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('mensaje', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('prioridad', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True),
    sa.Column('stock_actual', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('stock_minimo', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('stock_critico', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dias_vencimiento', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fecha_creacion', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('fecha_resolucion', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('resuelta_por', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('notas_resolucion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['producto_id'], ['productos.id'], name='alertas_inventario_producto_id_fkey'),
    sa.ForeignKeyConstraint(['resuelta_por'], ['users.id'], name='alertas_inventario_resuelta_por_fkey'),
    sa.PrimaryKeyConstraint('id', name='alertas_inventario_pkey')
    )
    op.create_index('ix_alertas_inventario_tipo', 'alertas_inventario', ['tipo'], unique=False)
    op.create_index('ix_alertas_inventario_producto_id', 'alertas_inventario', ['producto_id'], unique=False)
    op.create_index('ix_alertas_inventario_prioridad', 'alertas_inventario', ['prioridad'], unique=False)
    op.create_index('ix_alertas_inventario_estado', 'alertas_inventario', ['estado'], unique=False)
    op.create_table('movimientos_inventario',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('producto_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tipo_movimiento', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('cantidad', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('cantidad_anterior', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('cantidad_nueva', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('referencia_tipo', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('referencia_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fecha_movimiento', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('motivo', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('costo_unitario', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('costo_total', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['producto_id'], ['productos.id'], name='movimientos_inventario_producto_id_fkey'),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id'], name='movimientos_inventario_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='movimientos_inventario_pkey')
    )
    op.create_index('ix_movimientos_inventario_tipo_movimiento', 'movimientos_inventario', ['tipo_movimiento'], unique=False)
    op.create_index('ix_movimientos_inventario_producto_id', 'movimientos_inventario', ['producto_id'], unique=False)
    op.create_index('ix_movimientos_inventario_fecha_movimiento', 'movimientos_inventario', ['fecha_movimiento'], unique=False)
    op.create_table('reorden_automatico',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('producto_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('proveedor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cantidad_sugerida', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('costo_estimado', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('fecha_sugerida', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('estado', sa.VARCHAR(length=20), server_default=sa.text("'pendiente'::character varying"), autoincrement=False, nullable=True),
    sa.Column('aprobado_por', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fecha_aprobacion', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('fecha_creacion', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('notas', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['aprobado_por'], ['users.id'], name='reorden_automatico_aprobado_por_fkey'),
    sa.ForeignKeyConstraint(['producto_id'], ['productos.id'], name='reorden_automatico_producto_id_fkey'),
    sa.ForeignKeyConstraint(['proveedor_id'], ['proveedores.id'], name='reorden_automatico_proveedor_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='reorden_automatico_pkey')
    )
    op.create_index('ix_reorden_automatico_proveedor_id', 'reorden_automatico', ['proveedor_id'], unique=False)
    op.create_index('ix_reorden_automatico_producto_id', 'reorden_automatico', ['producto_id'], unique=False)
    op.create_index('ix_reorden_automatico_estado', 'reorden_automatico', ['estado'], unique=False)
    op.create_table('configuracion_inventario',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('producto_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('stock_minimo', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('stock_maximo', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('punto_reorden', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cantidad_reorden', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('alerta_stock_bajo', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('alerta_stock_critico', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('alerta_vencimiento', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('dias_vencimiento_alerta', sa.INTEGER(), server_default=sa.text('30'), autoincrement=False, nullable=True),
    sa.Column('alerta_movimiento_grande', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('umbral_movimiento_grande', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('fecha_creacion', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('fecha_actualizacion', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('activo', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['producto_id'], ['productos.id'], name='configuracion_inventario_producto_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='configuracion_inventario_pkey'),
    sa.UniqueConstraint('producto_id', name='configuracion_inventario_producto_id_key')
    )
    op.create_index('ix_configuracion_inventario_producto_id', 'configuracion_inventario', ['producto_id'], unique=False)
    op.create_index('ix_configuracion_inventario_activo', 'configuracion_inventario', ['activo'], unique=False)
    # ### end Alembic commands ###
